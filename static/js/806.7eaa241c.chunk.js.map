{"version":3,"file":"static/js/806.7eaa241c.chunk.js","mappings":"4KAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,+KClBWC,EAAaT,EAAAA,GAAAA,IAAH,8FAMVU,EAAUV,EAAAA,GAAAA,EAAH,8CAIPW,EAASX,EAAAA,GAAAA,KAAH,+KAKG,YAAiB,IAAdY,EAAa,EAAbA,OACrB,OAAIA,EAAS,EACJ,OAELA,GAAU,GAAKA,GAAU,EACpB,OAGF,MACR,IAEQ,gBAAGA,EAAH,EAAGA,OAAH,OAAiBA,GAAU,GAAKA,GAAU,EAAI,QAAU,OAAxD,I,SC+BX,EArDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,0FACCD,EADD,UACkBE,EAAAA,EAAAA,IAAoBN,GADtC,4EAAD,EAGD,GAAE,CAACA,KAGF,SAACd,EAAA,EAAD,WACIiB,EAAQI,OAAS,GACjB,uCAEA,SAACrB,EAAA,EAAD,CAAKsB,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAA5D,SACGR,EAAQS,KACP,YAMO,IALLC,EAKI,EALJA,GACAC,EAII,EAJJA,OACkBf,EAGd,EAHJgB,eAAkBhB,OAClBiB,EAEI,EAFJA,QACAC,EACI,EADJA,WAEA,OACE,UAACrB,EAAD,YACE,0BACE,mCADF,IACkBkB,MAElB,0BACE,mCAAe,KACf,SAAChB,EAAD,CAAQC,OAAQA,EAAhB,SACGA,GAAkB,kBAGvB,wBACE,sCAEF,SAACF,EAAD,UAAUmB,KACV,0BACE,wCAAoB,IACnB,IAAIE,KAAKD,GAAYE,mBAAmB,cAhB5BN,EAoBpB,OAMZ,C,4MCvDDO,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACED,IAAAA,IAAU,qBAAsB,CACzDE,OAAQ,CACNC,QAASC,sCAHY,cACnBC,EADmB,yBAMlBA,EAAaC,KAAKC,SANA,2CAAH,qDASXC,EAAkB,mCAAG,WAAMC,GAAN,uFACNT,IAAAA,IAAU,eAAgB,CAClDE,OAAQ,CACNC,QAASC,mCACTM,MAAOD,EACPE,SAAU,QACVC,KAAM,EACNC,eAAe,KAPa,cAC1BC,EAD0B,yBAUzBA,EAAYR,KAAKC,SAVQ,2CAAH,sDAalBQ,EAAY,mCAAG,WAAMtB,GAAN,uFACDO,IAAAA,IAAA,gBAAmBP,GAAM,CAChDS,OAAQ,CACNC,QAASC,mCACTO,SAAU,WAJY,cACpBK,EADoB,yBAOnBA,EAAWV,MAPQ,2CAAH,sDAUZW,EAAmB,mCAAG,WAAMxB,GAAN,uFACRO,IAAAA,IAAA,gBAAmBP,EAAnB,YAAiC,CACxDS,OAAQ,CACNC,QAASC,mCACTO,SAAU,WAJmB,cAC3BK,EAD2B,yBAO1BA,EAAWV,MAPe,2CAAH,sDAUnBpB,EAAmB,mCAAG,WAAOO,GAAP,4FAAWmB,EAAX,+BAAkB,EAAlB,SACRZ,IAAAA,IAAA,gBAAmBP,EAAnB,YAAiC,CACxDS,OAAQ,CACNC,QAASC,mCACTO,SAAU,QACVC,KAAAA,KAL6B,cAC3BI,EAD2B,yBAQ1BA,EAAWV,KAAKC,SARU,2CAAH,qD","sources":["components/Box.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/movie-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const ContentBox = styled.div`\n  background-color: wheat;\n  border-radius: 10px;\n  padding: 20px;\n`;\n\nexport const Content = styled.p`\n  text-indent: 50px;\n`;\n\nexport const Rating = styled.span`\n  display: inline-block;\n  min-width: 30px;\n  text-align: center;\n  padding: 5px;\n  background-color: ${({ rating }) => {\n    if (rating > 6) {\n      return '#6c3';\n    }\n    if (rating >= 4 && rating <= 6) {\n      return '#fc3';\n    }\n\n    return '#f00';\n  }};\n  border-radius: 10px;\n  color: ${({ rating }) => (rating >= 4 && rating <= 6 ? 'black' : 'white')};\n`;\n","import { Box } from 'components/Box';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsByMovieId } from 'services/movie-api';\nimport { ContentBox, Content, Rating } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      setReviews(await getReviewsByMovieId(movieId));\n    })();\n  }, [movieId]);\n\n  return (\n    <Box>\n      {!reviews.length > 0 ? (\n        <p>No reviews</p>\n      ) : (\n        <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={3}>\n          {reviews.map(\n            ({\n              id,\n              author,\n              author_details: { rating },\n              content,\n              created_at,\n            }) => {\n              return (\n                <ContentBox key={id}>\n                  <p>\n                    <b>Author:</b> {author}\n                  </p>\n                  <p>\n                    <b>Rating:</b>{' '}\n                    <Rating rating={rating}>\n                      {rating ? rating : 'Not rated'}\n                    </Rating>\n                  </p>\n                  <p>\n                    <b>Review:</b>\n                  </p>\n                  <Content>{content}</Content>\n                  <p>\n                    <b>Created at: </b>{' '}\n                    {new Date(created_at).toLocaleDateString('en-US')}\n                  </p>\n                </ContentBox>\n              );\n            }\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const trendingData = await axios.get('trending/movie/day', {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n    },\n  });\n  return trendingData.data.results;\n};\n\nexport const searchMoviesByName = async movie => {\n  const foundMovies = await axios.get('search/movie', {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      query: movie,\n      language: 'en-US',\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return foundMovies.data.results;\n};\n\nexport const getMovieById = async id => {\n  const foundMovie = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getMovieCreditsById = async id => {\n  const foundMovie = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      language: 'en-US',\n    },\n  });\n  return foundMovie.data;\n};\n\nexport const getReviewsByMovieId = async (id, page = 1) => {\n  const foundMovie = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: process.env.REACT_APP_MOVIES_API_KEY,\n      language: 'en-US',\n      page,\n    },\n  });\n  return foundMovie.data.results;\n};\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","ContentBox","Content","Rating","rating","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewsByMovieId","length","as","display","flexDirection","gridGap","map","id","author","author_details","content","created_at","Date","toLocaleDateString","axios","getTrending","params","api_key","process","trendingData","data","results","searchMoviesByName","movie","query","language","page","include_adult","foundMovies","getMovieById","foundMovie","getMovieCreditsById"],"sourceRoot":""}